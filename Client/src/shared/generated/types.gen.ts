// This file is auto-generated by @hey-api/openapi-ts

export type Bookmark = {
  id?: number;
  /**
   * Источник данных
   */
  source?: string;
  /**
   * Тикер (символ)
   */
  ticker?: string;
  /**
   * Мой тип для группировки
   */
  type?: string;
  /**
   * Страна
   */
  country?: string;
  /**
   * Сектор (отрасль)
   */
  sector?: string;
  /**
   * Куплено ли
   */
  isBought?: boolean;
  /**
   * Описание
   */
  description?: null | string;
};

/**
 * Брокер
 */
export type Broker = 'ALPHA' | 'BCS' | 'T' | 'SBER' | 'FINAM' | 'VTB' | 'CIFRA' | 'MKB' | 'GPB' | 'MTS';

/**
 * Брокер
 */
export const Broker = {
  ALPHA: 'ALPHA',
  BCS: 'BCS',
  T: 'T',
  SBER: 'SBER',
  FINAM: 'FINAM',
  VTB: 'VTB',
  CIFRA: 'CIFRA',
  MKB: 'MKB',
  GPB: 'GPB',
  MTS: 'MTS',
} as const;

/**
 * Покупка или продажа
 */
export type BuySell = 'Buy' | 'Sell';

/**
 * Покупка или продажа
 */
export const BuySell = {
  BUY: 'Buy',
  SELL: 'Sell',
} as const;

/**
 * Валюта
 */
export type Currency = 'RUB' | 'USD' | 'EUR';

/**
 * Валюта
 */
export const Currency = {
  RUB: 'RUB',
  USD: 'USD',
  EUR: 'EUR',
} as const;

/**
 * Фильтр
 */
export type Filter = null | {
  logicalOperation: LogicalOperation;
  items: Array<FilterItem>;
};

export type FilterItem = {
  field: string;
  value: unknown;
  filterOperation: FilterOperation;
};

export type FilterOperation =
  | 'Equal'
  | 'NotEqual'
  | 'GreaterThan'
  | 'GreaterThanOrEqual'
  | 'LessThan'
  | 'LessThanOrEqual'
  | 'Contains'
  | 'In';

export const FilterOperation = {
  EQUAL: 'Equal',
  NOT_EQUAL: 'NotEqual',
  GREATER_THAN: 'GreaterThan',
  GREATER_THAN_OR_EQUAL: 'GreaterThanOrEqual',
  LESS_THAN: 'LessThan',
  LESS_THAN_OR_EQUAL: 'LessThanOrEqual',
  CONTAINS: 'Contains',
  IN: 'In',
} as const;

export type LogicalOperation = 'And' | 'Or';

export const LogicalOperation = {
  AND: 'And',
  OR: 'Or',
} as const;

export type QueryParams = {
  /**
   * Сортировка
   */
  sort?: null | Array<Sort>;
  filter?: Filter;
  /**
   * Номер страницы
   */
  page?: null | number;
  /**
   * Число записей на странице
   */
  pageSize?: null | number;
};

/**
 * модель сортировки
 */
export type Sort = {
  direction: SortDirection;
  field: string;
};

/**
 * Направления сортировки
 */
export type SortDirection = 'Asc' | 'Desc';

/**
 * Направления сортировки
 */
export const SortDirection = {
  ASC: 'Asc',
  DESC: 'Desc',
} as const;

export type Statistics = {
  /**
   * Id
   */
  id: number;
  /**
   * Тикер
   */
  ticker: string;
  /**
   * Средняя цена в целом
   */
  avgPrice: number;
  /**
   * Сумма по количеству штук
   */
  sumCount: number;
  /**
   * Сумма по объему денег
   */
  total: number;
  currency: Currency;
};

export type Trade = {
  /**
   * Id
   */
  id?: number;
  /**
   * Тикер
   */
  ticker?: string;
  /**
   * Дата сделки
   */
  tradeDate?: string;
  /**
   * Средняя цена
   */
  avgPrice?: number;
  /**
   * Кол-во штук
   */
  count?: number;
  /**
   * Сумма по позиции
   */
  sum?: number;
  currency?: Currency;
  buySell?: BuySell;
  broker?: Broker;
};

export type PostApiV1TradesListData = {
  body: QueryParams;
  path?: never;
  query?: never;
  url: '/api/v1/trades/list';
};

export type PostApiV1TradesListErrors = {
  /**
   * Bad Request
   */
  400: unknown;
};

export type PostApiV1TradesListResponses = {
  /**
   * OK
   */
  200: Array<Trade>;
};

export type PostApiV1TradesListResponse = PostApiV1TradesListResponses[keyof PostApiV1TradesListResponses];

export type GetApiV1TradesGetseedmoneyData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/v1/trades/getseedmoney';
};

export type GetApiV1TradesGetseedmoneyErrors = {
  /**
   * Bad Request
   */
  400: unknown;
};

export type GetApiV1TradesGetseedmoneyResponses = {
  /**
   * OK
   */
  200: number;
};

export type GetApiV1TradesGetseedmoneyResponse =
  GetApiV1TradesGetseedmoneyResponses[keyof GetApiV1TradesGetseedmoneyResponses];

export type GetApiV1StatisticsListData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/v1/statistics/list';
};

export type GetApiV1StatisticsListErrors = {
  /**
   * Bad Request
   */
  400: unknown;
};

export type GetApiV1StatisticsListResponses = {
  /**
   * OK
   */
  200: Array<Statistics>;
};

export type GetApiV1StatisticsListResponse = GetApiV1StatisticsListResponses[keyof GetApiV1StatisticsListResponses];

export type GetApiV1BookmarksListData = {
  body?: never;
  path?: never;
  query?: never;
  url: '/api/v1/bookmarks/list';
};

export type GetApiV1BookmarksListErrors = {
  /**
   * Bad Request
   */
  400: unknown;
};

export type GetApiV1BookmarksListResponses = {
  /**
   * OK
   */
  200: Array<Bookmark>;
};

export type GetApiV1BookmarksListResponse = GetApiV1BookmarksListResponses[keyof GetApiV1BookmarksListResponses];

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
